@import 'reset';
@import 'mixin';
// 1rem = fontSize px
// 1px = (1 / fontSize)rem
// 这里$ratio值的设定是由用户决定的，可以根据自己的实际需要（或者UI设计稿）进行修改
// 这个值决定了px2rem输出的结果，如果设定为37.5，那么px2rem(20)，表示在375px宽度的屏幕下，显示为20px，计算方法如下：
// 第一步：375px宽度的屏幕，1rem=37.5px（因为在App.vue中指定了html的font-size=375px/10=37.5px，所以1rem=37.5px）
// 第二步：计算px2rem(20)=(20/37.5)rem
// 第三步：将rem转化为px：(20/37.5) * 1rem = 20/37.5 * 37.5px = 20px
// 如果屏幕为414px，那么px2rem(20)的计算结果为：
// px2rem(20)=(20/37.5)*41.4px=22.08px
// 从而实现了自适应布局，因为px2rem(20)会随屏幕宽度放大或缩小，这是一道数学题
$fontSize: 37.5;
@function px2rem($px) {
    @return ($px / $fontSize)+rem;
}

@mixin center() {
    display: flex;
    justify-content: center;
    align-items: center;
}

a {
    text-decoration: none;
}

.mint-header.is-fixed {
    z-index: 1000;
    display: flex;
    background: #fff;
    align-items: center;
    .mint-header-title {
        font-size: 18px;
        color: #2c3e50;
    }
}

.iconfont {
    color: #333;
    font-size: px2rem(20);
}

.slide-up-enter,
.slide-up-leave-to {
    transform: translate3d(0, px2rem(108), 0)
}

.slide-up-enter-to,
.slide-up-leave {
    transform: translate3d(0, 0, 0)
}

.slide-up-enter-active,
.slide-up-leave-active {
    transition: all .3s linear;
}

.swiper-wrapper {
    display: flex;
}

.mint-header-title {
    line-height: 50px;
}